name: CI Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

env:
  PORT: 3500
  CYPRESS_HOST_PORT: 4000
  CYPRESS_BASE_URL_PREFIX: http://localhost:3500

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: NPM or Yarn install with caching
        uses: bahmutov/npm-install@v1.6.0

      - name: Lint & Format
        run: |
          npm run lint
          npm run format

      - name: Build
        run: npm run build

      - name: Run Tests
        run: npm run test:ui

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-files: ./coverage/cypress/lcov.info
          minimum-coverage: 80

      - name: Store coverage folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  sonarqube:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Downloads coverage artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: coverage
          path: coverage

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
